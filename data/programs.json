[
    {
        "name": "Sum of N Numbers",
        "description": "Write a program to calculate the sum of the first N numbers. \nEx: input=5 =>5+4+3+2+1 =15\noutput=15",
        "code": "#include <stdio.h>\nint main() {\n    int n, sum = 0;\n    printf(\"Enter n: \");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        sum += i;\n    }\n    printf(\"Sum: %d\\n\", sum);\n    return 0;\n}"
    },
    {
        "name": "Factorial of a Number",
        "description": "Write a program to compute the factorial of a given number. \n Ex: input= 5  =>5x4x3x2x1 \n output=120",
        "code": "#include <stdio.h>\nint main() {\n    int n, fact = 1;\n    printf(\"Enter n: \");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) {\n        fact *= i;\n    }\n    printf(\"Factorial: %d\\n\", fact);\n    return 0;\n}"
    },
    {
      "name": "Armstrong number",
        "description": "Write a C program to check whether a number \nis Armstrong number or not A number is Armstrong number \nif the sum of the digit to the power of \nnumber of digits is equal to the original number",

        "code": "#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint n,r,s=0,m,ct=0;\n\tscanf(\"%d\",&n);\n\tm=n;\n\twhile(n>0)\n\t{\n\t\tr=n%10;\n\t\tct=ct+1;\n\t\tn=n/10;\n\t}\n\tn=m;\n\twhile(n>0)\n\t{\n\t\tr=n%10;\n\t\ts=s+pow(r,ct);\n\t\tn=n/10;\n\t}\n\tif(m==s)\n\tprintf(\"Armstrong\");\n\telse\n\tprintf(\"Not an Armstrong\");\n\treturn 0;\n}\n"
  
    },
    {
    "name": "Ascending Order",
    "description": "Write a C program to print 3 values \nin ascending order using ladder \nif..else",
    "code": "#include<stdio.h>\nint main()\n{\n\tint a,b,c;\n\tscanf(\"%d %d %d\",&a,&b,&c);\n\tif(a<=b&&b<=c)\n\tprintf(\"%d %d %d \",a,b,c);\n\telse if(a<=c&&c<=b)\n\tprintf(\"%d %d %d\",a,c,b);\n\telse if(b<=a&&a<=c)\n\tprintf(\"%d %d %d\",b,a,c);\n\telse if(b<=c&&c<=a)\n\tprintf(\"%d %d %d\",b,c,a);\n\telse if(c<=a&&a<=b)\n\tprintf(\"%d %d %d\",c,a,b);\n\telseÂ \n\tprintf(\"%d %d %d\",c,b,a);\n\t\n}\n"
       
    },
    {
    "name": "Categorize Age",
    "description": "Write a C program to categorize a \nperson's age using ladder if..else  \n0-12: Child\n13-19: Teenager\n20-35: Young Adult\n36-55: Middle Aged\n56-100: Senior\nelse: Invalid" ,
    "code": "#include<stdio.h>\nint main()\n{\n\tint age;\n\tscanf(\"%d\",&age);\n\tif(age>=0&&age<=12)\n\tprintf(\"Child\");\n\telse if(age>=13&&age<=19)\n\tprintf(\"Teenager\");\n\telse if(age>=20&&age<=35)\n\tprintf(\"Young Adult\");\n\telse if(age>=36&&age<=55)\n\tprintf(\"Middle Aged\");\n\telse if(age>=56&&age<=100)\n\tprintf(\"Senior\");\n\telse\n\tprintf(\"Invalid\");\n\treturn 0;\n}\n"
    
    },
    {        
    "name": "Automorphic Number",
    "description": "automorphic number or not\nA number is called an automorphic number if and only if \nthe square of the given number ends with the same number \nitself. For example, 25, 76 are automorphic numbers because \ntheir square is 625 and 5776, respectively and the last two \ndigits of the square represent the number itself. Some other \nautomorphic numbers are 5, 6, 36, 890625, etc.",
    "code": "c\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong long int m,n,r,ct,p;\n\tscanf(\"%lld\",&n);\n\tp=n;\n\tm=n*n;\n\tct=0;\n\tdo\n\t{\n\t\tr=n%10;\n\t\tct=ct+1;\n\t\tn=n/10;\n\t}while(n>0);\n\tr=m%(int)pow(10,ct);\n\tif(r==p)\n\tprintf(\"Automorphic\");\n\telse\n\tprintf(\"Not Automorphic\");\n\treturn 0;\n}\n"
    },
    {
     "name": "Automorphics in range",
    "description": "C program to print automorphic numbers \nbetween 1 and a given value(25->625) \nSample Input and Output  \ninput=1000 \noutput=1 5 6 25 76 376 625\ninput=10000\noutput=1 5 6 25 76 376 625 9376 ",
    "code": "c\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tlong long int m,n,r,ct,p,i;\n\tscanf(\"%lld\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tp=i;\n\t\tm=i*i;\n\t\tct=0;\n\t\tdo\n\t\t{\n\t\t\tr=p%10;\n\t\t\tct=ct+1;\n\t\t\tp=p/10;\n\t\t}while(p>0);\n\t\tr=m%(int)pow(10,ct);\n\t\tif(r==i)\n\t\tprintf(\"%d \",i);\n\t}\n\treturn 0;\n}\n"
    },
    {
    "name": "Binary to Decimal",
    "description": "convert a given binary value to decimal",
    "code": "c\n#include<stdio.h>\n#include<math.h>\nint main()\n{\n\tint b,d=0,r,i=0;\n\tscanf(\"%d\",&b);\n\tdo\n\t{\n\t\tr=b%10;\n\t\td=d+r*pow(2,i++);\n\t\tb=b/10;\n\t}while(b>0);\n\tprintf(\"%d\",d);\n\treturn 0;\n}\n"  
    },
    {
    "name": "Classification of Character",
    "description": "Write a C program that takes a character \nas input andclassifies it as:\nVowel\nConsonant\nDigit\nSpecial Character\n \ninput=I\noutput=Vowel\ninput=u\noutput=Vowel\ninput=k\noutput=Consonant\ninput=3\noutput=Digit\ninput=%\noutput=Special Character\ninput=P\noutput=Consonant\ninput=q\noutput=Consonant\n",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tchar ch;\n\tscanf(\"%c\",&ch);\n\tif((ch>=65&&ch<=90)||(ch>=97&&ch<=122))\n\t{\n\t\tif(ch=='a'||ch=='e'||ch=='i'||ch=='o'||ch=='u'||ch=='A'||ch=='E'||ch=='I'||ch=='O'||ch=='U')\n\t\tprintf(\"Vowel\");\n\t\telse\n\t\tprintf(\"Consonant\");\n\t}\n\telse if(ch>=48&&ch<=57)\n\t{\n\t\tprintf(\"Digit\");\n\t}\n\telse\n\t{\n\t\tprintf(\"Special Character\");\n\t}\n\treturn 0;\n}\n"  
    },
    {
    "name": "Character Classification",
    "description": "Character Classification: Write a C program that takes a character as input and classifies it as:\nUppercase letter\nLowercase letter\nDigit\nSpecial character (anything else)\ninput=Z\noutput=uppercase\ninput=9\noutput=digit\ninput=m\noutput=lowercase",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tchar ch;\n\tscanf(\"%c\",&ch);\n\tif(ch>=65&&ch<=90)\n\tprintf(\"uppercase\");\n\telse if(ch>=97&&ch<=122)\n\tprintf(\"lowercase\");\n\telse if(ch>=48&&ch<=57)\n\tprintf(\"digit\");\n\telse\n\tprintf(\"special character\");\n\treturn 0;\n}\n" 
    },
    {
    "name": "Classify Number",
    "description": "Write a C program that takes an integer as input and uses\nnested if-else statements to classify the number as:\nPositive Even\nPositive Odd\nNegative Even\nNegative Odd\nZero\ninput=15\noutput=Positive Odd\n input=-20\noutput=Negative Even\ninput=-33\noutput=Negative Odd\ninput=444\noutput=Positive Even\ninput=0\noutput=Zero",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint n;\n\tscanf(\"%d\",&n);\n\tif(n>0)\n\t{\n\t\tif(n%2==0)\n\t\tprintf(\"Positive Even\");\n\t\telse\n\t\tprintf(\"Positive Odd\");\n\t}\n\telse if(n<0)\n\t{\n\t\tif(n%2==0)\n\t\tprintf(\"Negative Even\");\n\t\telse\n\t\tprintf(\"Negative Odd\");\n\t}\n\telse\n\t{\n\t\tprintf(\"Zero\");\n\t}\n\treturn 0;\n}\n"  
    },
    {
    "name": "Color Name",
    "description": "Write a C Program to print colorname based \non a given input value \n1-red\n2-blue\n3-green\n4-yellow\n5-pink\notherwise- black\ninput=-3\noutput=black\ninput=100\noutput=black\ninput=5\noutput=pink",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint v;\n\tscanf(\"%d\",&v);\n\tswitch(v)\n\t{\n\t\tcase 1:printf(\"red\");\n\t\t\t\tbreak;\n\t\tcase 2:printf(\"blue\");\n\t\t\t\tbreak;\n\t\tcase 3:printf(\"green\");\n\t\t\t\tbreak;\n\t\tcase 4:printf(\"yellow\");\n\t\t\t\tbreak;\n\t\tcase 5:printf(\"pink\");\n\t\t\t\tbreak;\n\t\tdefault:printf(\"black\");\n\t\t\t\tbreak;\n\t}\n\treturn 0;\n}\n"  
    },
    {
    "name": "Count the Digits",
    "description": "Write a C program to count the digits of a given \npositive number\ninput=5555\noutput=Number of digits is 4\ninput=321\noutput=Number of digits is 3\n",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint n,r,ct;\n\tscanf(\"%d\",&n);\n\tct=0;\n\twhile(n>0)\n\t{\n\t\tr=n%10;\n\t\tct=ct+1;\n\t\tn=n/10;\n\t}\n\tprintf(\"Number of digits is %d\",ct);\n\treturn 0;\n}\n" 
    },
    {
    "name": "Count The Number of Factors",
    "description": "C program to count the number of factors\nof a given value\nSample Input and Output\ninput=8\noutput=Number of factors is 4\ninput=9\noutput=Number of factors is 3\n",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint n,i,ct=0;\n\tscanf(\"%d\",&n);\n\tfor(i=1;i<=n;i++)\n\t{\n\t\tif(n%i==0)\n\t\tct++;\n\t}\n\tprintf(\"Number of factors is %d\",ct);\n\treturn 0;\n}\n"
  
    },
    {
    "name": "Disarium Number",
    "description": "disarium number or not\n1^1 + 7^2 + 5^3 = 1 + 49 + 125 = 175\n175 is a disarium number",
    "code": "c\n#include<stdio.h>\n#include<stdio.h>\nint main()\n{\n\tint n,r,rev=0,i=1,s=0,m;\n\tscanf(\"%d\",&n);\n\tm=n;\n\tdo\n\t{\n\t\tr=n%10;\n\t\trev=rev*10+r;\n\t\tn=n/10;\n\t}while(n>0);\n\tn=rev;\n\tdo\n\t{\n\t\tr=n%10;\n\t\ts=s+pow(r,i++);\n\t\tn=n/10;\n\t}while(n>0);\n\tif(s==m)\n\tprintf(\"Disarium\");\n\telse\n\tprintf(\"Not Disarium\");\n\treturn 0;\n}\n"
 
    },
    {
    "name": "Decimal to Binary",
    "description": "Write a program that convert a given decimal value to binary",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint b=0,d,r,t=1;\n\tscanf(\"%d\",&d);\n\tdo\n\t{\n\t\tr=d%2;\n\t\tb=b+r*t;\n\t\td=d/2;\n\t\tt=t*10;\n\t}while(d>0);\n\tprintf(\"%d\",b);\n\treturn 0;\n}\n"  
    },
    {
    "name": "Decimal to Octal",
    "description": "Write a program thatconvert a given decimal value to octal",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint o=0,d,r,t=1;\n\tscanf(\"%d\",&d);\n\tdo\n\t{\n\t\tr=d%8;\n\t\to=o+r*t;\n\t\td=d/8;\n\t\tt=t*10;\n\t}while(d>0);\n\tprintf(\"%d\",o);\n\treturn 0;\n}\n"  
    },
    {
    "name": "Calculate Electricity Bill",
    "description": "Write a C program to calculate the electricity bill based\non the units consumed using laddr if..else:\n1-100 units: 1.5/unit\n101-300 units:2.5/unit\n301-500 units: 4.75/unit\nAbove 500 units: 6.85/unit\n\ninput=200\noutput=Bill is 500.00\n\ninput=350\noutput=Bill is 1662.50",
    "code": "c\n#include<stdio.h>\nint main()\n{\n\tint n;\n\tfloat bill;\n\tscanf(\"%d\",&n);\n\tif(n>0&&n<=100)\n\t\tbill=n*1.5;\n\telse if(n>100&&n<=300)\n\t\tbill=n*2.5;\n\telse if(n>300&&n<=500)\n\t\tbill=n*4.75;\n\telse \n\t\tbill=n*6.85;\n\t\n\tprintf(\"Bill is %.2f\",bill); \n}"  
    },
    {
    "name": "Fibonacci Number",
    "description": "C program to print first n fibonacci numbers\n\nSample Input and Output\ninput=12\noutput=0 1 1 2 3 5 8 13 21 34 55 89\n\ninput=6\noutput=0 1 1 2 3 5",
    "code": "#include<stdio.h>\nint main()\n{\n\tint n,i,a=0,b=1,c;\n\tscanf(\"%d\",&n);\n\tprintf(\"%d %d \",a,b);\n\tfor(i=3;i<=n;i++)\n\t{\n\t\tc=a+b;\n\t\tprintf(\"%d \",c);\n\t\ta=b;\n\t\tb=c;\n\t}\n\treturn 0;\n}\n"
  
    },
    {
    "name": "GCD of 2 Numbers",
    "description": "gcd of 2 numbers",
    "code": "\n#include<stdio.h>\nint main()\n{\n\tint a,b,r;\n\tscanf(\"%d %d\",&a,&b);\n\tdo\n\t{\n\t\tr=b%a;\n\t\tb=a;\n\t\ta=r;\n\t}while(a!=0);\n\tprintf(\"GCD is %d\",b);\n\treturn 0;\n}\n"
 
    },
    {
    "name": "Calculate Grade of aStudent",
    "description": "Write a C program to print the grade of a student if he is \n passed in all the subjects (marks>=50 means pass) using nested if..else \n    If failed in atleast one subject print Fail\n\n If average is\n 90-100: Grade A\n80 to <90: Grade B\n70 to <80: Grade C\n60 to <70: Grade D\n50 to <60: Grade E\n\ninput=80 85 88 86 89\noutput=Grade B\n\ninput=70 71 72 74 75\noutput=Grade C\n\ninput=60 62 65 67 68\noutput=Grade D\n\ninput=50 51 53 55 58\noutput=Grade E\n\ninput=90 85 88 92 94\noutput=Grade A\n\ninput=68 70 72 60 62\noutput=Grade D\n\ninput=40 60 75 80 85\noutput=Fail",
    "code": "#include<stdio.h>\nint main()\n{\n\tint m1,m2,m3,m4,m5,sum;\n\tfloat avg;\n\t\n\tscanf(\"%d %d %d %d %d\",&m1,&m2,&m3,&m4,&m5);\n\tif(m1>=50&&m2>=50&&m3>=50&&m4>=50&&m5>=50)\n\t{\n\t\tsum=m1+m2+m3+m4+m5;\n\t\tavg=(float)sum/5;\n\t\tif(avg>=90&&avg<=100)\n\t\tprintf(\"Grade A\");\n\t\telse if(avg>=80&&avg<90)\n\t\tprintf(\"Grade B\");\n\t\telse if(avg>=70&&avg<80)\n\t\tprintf(\"Grade C\");\n\t\telse if(avg>=60&&avg<70)\n\t\tprintf(\"Grade D\");\n\t\telse\n\t\tprintf(\"Grade E\");\n\t}\n\telse\n\t{\n\t\tprintf(\"Fail\");\n\t}\n\treturn 0;\n}\n"
  
    },
    {
    "name": "Greatest of 3 Values",
    "description": "Write a C program to find the greatest of 3 values\nusing nested if..else\n\ninput=3 4 5\noutput=5\n\ninput= -4 -5 -3\noutput=-3\n\ninput=5 -4 3\noutput=5",
    "code": "#include<stdio.h>\nint main()\n{\n\tint a,b,c;\n\tscanf(\"%d %d %d\", &a, &b, &c);\n\tif(a>b)\n\t{\n\t\tif(a>c)\n\t\tprintf(\"%d is greatest\", a);\n\t\telse\n\t\tprintf(\"%d is greatest\", c);\n\t}\n\telse\n\t{\n\t\tif(b>c)\n\t\tprintf(\"%d is greatest\", b);\n\t\telse\n\t\tprintf(\"%d is greatest\", c);\n\t}\n\treturn 0;\n}\n"
 
    },
    {
    "name": "Happy Number",
    "description": "Write a C program Given number is Happy number or not\n8^2 + 2^2 = 68\n6^2 + 8^2 = 100\n1^2 + 0^2 + 0^2 = 1\n82 is a happy number number\n\n A happy number is a number defined by the following process:\nStarting with any positive integer, replace the number by the sum of the squares of its digits.\nRepeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle1 that does not include 1.",
    "code": "\n#include<stdio.h>\nint main()\n{\n\tint n,r,s;\n\tscanf(\"%d\", &n);\n\tdo\n\t{\n\t\ts=0;\n\t\twhile(n>0)\n\t\t{\n\t\t\tr=n%10;\n\t\t\ts=s+r*r;\n\t\t\tn=n/10;\n\t\t}\n\t\tn=s;\n\t}while(n>9);\n\tif(n==1)\n\tprintf(\"Happy\");\n\telse\n\tprintf(\"UnHappy\");\n\treturn 0;\n}\n"
    },
    {
    "name": "Harshad number",
    "description": "Harshad number or not A number is said to be the Harshad number\nif it is divisible by the sum of its digits. \n156 is a Harshad number",
   "code": "\n#include<stdio.h>\nint main()\n{\n\tint n,r,s=0,m;\n\tscanf(\"%d\", &n);\n\tm=n;\n\tdo\n\t{\n\t\tr=n%10;\n\t\ts=s+r;\n\t\tn=n/10;\n\t}while(n>0);\n\tif(m%s==0)\n\tprintf(\"Harshad\");\n\telse\n\tprintf(\"Not Harshad\");\n\treturn 0;\n}\n" 
    },
    {
    "name": "Largest Digit",
    "description": "Print the largest digit in a given number\n\ninput=63840\noutput=Largest digit is 8\n\ninput=47182\noutput=Largest digit is 8\n\ninput=111111\noutput=Largest digit is 1\n\ninput=999990\noutput=Largest digit is 9\n\ninput=86420\noutput=Largest digit is 8",
    "code": "\n#include<stdio.h>\nint main()\n{\n\tint n,r,l;\n\tscanf(\"%d\", &n);\n\tl=n%10;\n\tn=n/10;\n\twhile(n>0)\n\t{\n\t\tr=n%10;\n\t\tif(l<r)\n\t\tl=r;\n\t\tn=n/10;\n\t}\n\tprintf(\"Largest digit is %d\", l);\n\treturn 0;\n}\n"
    },
    {
    "name": "",
    "description": "",
    "code": "" 
    },
    {
    "name": "",
    "description": "",
    "code": "" 
    },
    {
    "name": "",
    "description": "",
    "code": "" 
    },
    {
    "name": "",
    "description": "",
    "code": "" 
    },
    {
    "name": "",
    "description": "",
    "code": "" 
    }
]
